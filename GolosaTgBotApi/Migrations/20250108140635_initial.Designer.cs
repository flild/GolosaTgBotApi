// <auto-generated />
using System;
using GolosaTgBotApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GolosaTgBotApi.Migrations
{
    [DbContext(typeof(MariaContext))]
    [Migration("20250108140635_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GolosaTgBotApi.Models.Channel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("LinkedChatId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("GolosaTgBotApi.Models.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ChannelId")
                        .HasColumnType("bigint");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPost")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MessageThreadId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("TelegramId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.HasIndex("ChatId");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("ParentId", "ChatId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("GolosaTgBotApi.Models.LinkedChat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ChannelID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ChannelID")
                        .IsUnique();

                    b.ToTable("LinkedChat");
                });

            modelBuilder.Entity("GolosaTgBotApi.Models.Post", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ChannelId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InChatId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.Property<int>("postId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.HasIndex("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("GolosaTgBotApi.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GolosaTgBotApi.Models.Channel", b =>
                {
                    b.HasOne("GolosaTgBotApi.Models.User", null)
                        .WithMany("chanels")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GolosaTgBotApi.Models.Comment", b =>
                {
                    b.HasOne("GolosaTgBotApi.Models.Channel", null)
                        .WithMany("Comments")
                        .HasForeignKey("ChannelId");

                    b.HasOne("GolosaTgBotApi.Models.LinkedChat", "LinkedChat")
                        .WithMany("Comments")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GolosaTgBotApi.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GolosaTgBotApi.Models.Comment", "Parent")
                        .WithMany("Replies")
                        .HasForeignKey("ParentId", "ChatId")
                        .HasPrincipalKey("TelegramId", "ChatId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LinkedChat");

                    b.Navigation("Parent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GolosaTgBotApi.Models.LinkedChat", b =>
                {
                    b.HasOne("GolosaTgBotApi.Models.Channel", "Channel")
                        .WithOne("LinkedChat")
                        .HasForeignKey("GolosaTgBotApi.Models.LinkedChat", "ChannelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("GolosaTgBotApi.Models.Post", b =>
                {
                    b.HasOne("GolosaTgBotApi.Models.Channel", null)
                        .WithMany("Posts")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GolosaTgBotApi.Models.Channel", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("LinkedChat")
                        .IsRequired();

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("GolosaTgBotApi.Models.Comment", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("GolosaTgBotApi.Models.LinkedChat", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GolosaTgBotApi.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("chanels");
                });
#pragma warning restore 612, 618
        }
    }
}
